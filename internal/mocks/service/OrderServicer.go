// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	models "github.com/NahuelDT/portfolio-api/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// OrderServicer is an autogenerated mock type for the OrderServicer type
type OrderServicer struct {
	mock.Mock
}

// CancelOrder provides a mock function with given fields: orderID
func (_m *OrderServicer) CancelOrder(orderID uint) error {
	ret := _m.Called(orderID)

	if len(ret) == 0 {
		panic("no return value specified for CancelOrder")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uint) error); ok {
		r0 = rf(orderID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PlaceOrder provides a mock function with given fields: order, totalAmount
func (_m *OrderServicer) PlaceOrder(order *models.Order, totalAmount float64) error {
	ret := _m.Called(order, totalAmount)

	if len(ret) == 0 {
		panic("no return value specified for PlaceOrder")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Order, float64) error); ok {
		r0 = rf(order, totalAmount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewOrderServicer creates a new instance of OrderServicer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrderServicer(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrderServicer {
	mock := &OrderServicer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

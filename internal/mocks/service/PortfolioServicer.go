// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	models "github.com/NahuelDT/portfolio-api/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// PortfolioServicer is an autogenerated mock type for the PortfolioServicer type
type PortfolioServicer struct {
	mock.Mock
}

// GetPortfolio provides a mock function with given fields: userID
func (_m *PortfolioServicer) GetPortfolio(userID uint) (*models.Portfolio, error) {
	ret := _m.Called(userID)

	if len(ret) == 0 {
		panic("no return value specified for GetPortfolio")
	}

	var r0 *models.Portfolio
	var r1 error
	if rf, ok := ret.Get(0).(func(uint) (*models.Portfolio, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(uint) *models.Portfolio); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Portfolio)
		}
	}

	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPortfolioServicer creates a new instance of PortfolioServicer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPortfolioServicer(t interface {
	mock.TestingT
	Cleanup(func())
}) *PortfolioServicer {
	mock := &PortfolioServicer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
